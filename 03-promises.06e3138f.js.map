{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAKPO,SAASC,cAAc,SAASC,iBAAiB,UAAU,SAAUC,GACnEA,EAAMC,iBASN,IAPA,IAAMC,EAAaC,SAASC,KAAKC,SAASf,MAAMgB,OAC1CC,EAAOJ,SAASC,KAAKC,SAASE,KAAKD,OACnCE,EAASL,SAASC,KAAKC,SAASG,OAAOF,OAEzCG,EAAeP,EAGVQ,EAAI,EAAGA,GAAKF,EAAQE,IAC3BtB,EAAcsB,EAAGD,GACdE,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MACjBuB,EAAA3B,GAAS4B,OAAOC,QACd,uBAAwCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAGjD2B,OAAM,SAAAL,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAClBuB,EAAA3B,GAAS4B,OAAOI,QACd,sBAAqCF,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAIjDmB,GAAgBF,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n// Declaration of the function that creates a promise an contains the logic for resolve or reject\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n//Handling the submit of the form\ndocument.querySelector('.form').addEventListener('submit', function (event) {\n  event.preventDefault();\n\n  const firstDelay = parseInt(this.elements.delay.value);\n  const step = parseInt(this.elements.step.value);\n  const amount = parseInt(this.elements.amount.value);\n\n  let currentDelay = firstDelay;\n\n  // For the amount entered in the browser amessage will be displayed depending on the state of createPromise function\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    // the delay is incremented with step value for each interation\n    currentDelay += step;\n  }\n});\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","firstDelay","parseInt","this","elements","value","step","amount","currentDelay","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.06e3138f.js.map"}